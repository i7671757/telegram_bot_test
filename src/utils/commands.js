import logger from './logger.js';

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –¥–ª—è –±–æ—Ç–∞
 * @param {Object} i18n - –û–±—ä–µ–∫—Ç i18n –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @returns {Array} –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ –∫–æ–º–∞–Ω–¥
 */
function getCommandsList(i18n) {
  try {
    // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–∑–æ–≤ i18n.t —Å –∑–∞–ø–∞—Å–Ω—ã–º –≤–∞—Ä–∏–∞–Ω—Ç–æ–º
    const t = (key, defaultValue) => {
      try {
        return i18n && i18n.t ? i18n.t(key) : defaultValue;
      } catch (error) {
        return defaultValue;
      }
    };

    return [
      { command: 'start', description: t('commands.start', 'üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É') },
      // { command: 'language', description: t('commands.language', 'üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫') },
      // { command: 'session', description: t('commands.session', '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–∏') },
      // { command: 'reset', description: t('commands.reset', 'üîÑ –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏') },
      // { command: 'update_menu', description: t('commands.update_menu', 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥') },
      { command: 'settings', description: t('commands.settings', 'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏') }
    ];
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥', error);
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    return [
      { command: 'start', description: 'üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É' },
      {command: 'settings', description: 'üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏'},       
        // { command: 'language', description: 'üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫' },
        // { command: 'session', description: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Å—Å–∏–∏' },
        // { command: 'reset', description: 'üîÑ –°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' },
        // { command: 'update_menu', description: 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é –∫–æ–º–∞–Ω–¥' }
    ];
  }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é –±–æ—Ç–∞
 * @param {Object} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @returns {Promise<void>}
 */
async function setCommandsMenu(ctx) {
  try {
    if (!ctx || !ctx.telegram) {
      throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç Telegraf –∏–ª–∏ –∫–ª–∏–µ–Ω—Ç telegram');
    }

    if (!ctx.i18n || !ctx.i18n.t) {
      logger.warn('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç i18n –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –∫–æ–º–∞–Ω–¥');
    }

    const commands = getCommandsList(ctx.i18n);

    // –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å ID, —Ç–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–≥–æ
    if (ctx.from && ctx.from.id) {
      await ctx.telegram.setMyCommands(commands, { scope: { type: 'chat', chat_id: ctx.from.id } });
      logger.debug(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${ctx.from.id}`);
    } else {
      // –ò–Ω–∞—á–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
      await ctx.telegram.setMyCommands(commands);
      logger.debug('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é');
    }
  } catch (error) {
    logger.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é', error);
    throw error;
  }
}

export { setCommandsMenu, getCommandsList }; 